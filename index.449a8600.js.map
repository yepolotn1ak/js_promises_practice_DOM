{"mappings":"ACGA,IAAM,EAAgB,SAAC,CAAvB,EAAoC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC5B,EAAa,SAAS,aAAa,CAAC,OAE1C,EAAW,YAAY,CAAC,UAAW,gBAE/B,GACF,EAAW,SAAS,CAAC,GAAG,CAAC,SACzB,EAAW,WAAW,CAAI,GAAc,MAAA,CAAZ,EAAY,2BAExC,EAAW,SAAS,CAAC,GAAG,CAAC,WACzB,EAAW,WAAW,CAAI,GAAc,MAAA,CAAZ,EAAY,0BAG1C,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAQ,Q,GACjD,WAAW,WAAM,OAAA,EAAO,QAAU,EAAA,IACpC,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAQ,S,GACjD,SAAS,gBAAgB,CAAC,cAAe,WAAM,OAAA,EAAQ,S,EACzD,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAM,EAAS,CAAC,CAAA,EAAO,CAAA,EAAM,CAE7B,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAO,MAAM,CAAC,EAAG,EAAG,CAAA,GACpB,GACF,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAO,MAAM,CAAC,EAAG,EAAG,CAAA,GACpB,GACF,GAEA,IAAM,EAAc,WAAM,OAAA,EAAO,KAAK,CAAC,UAAY,EAAQ,Q,CAC7D,GAEA,EAAa,IAAI,CAAC,GAAe,KAAK,CAAC,SAAC,CAAxC,EAAkD,OAAA,EAAc,EAAO,CAAA,E,GACvE,EAAc,IAAI,CAAC,GACnB,EAAa,IAAI,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable prefer-promise-reject-errors */ \"use strict\";\nvar promiseHelper = function(namePromise) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var messageDiv = document.createElement(\"div\");\n    messageDiv.setAttribute(\"data-qa\", \"notification\");\n    if (isError) {\n        messageDiv.classList.add(\"error\");\n        messageDiv.textContent = \"\".concat(namePromise, \" promise was rejected\");\n    } else {\n        messageDiv.classList.add(\"success\");\n        messageDiv.textContent = \"\".concat(namePromise, \" promise was resolved\");\n    }\n    document.body.append(messageDiv);\n};\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        return resolve(\"First\");\n    });\n    setTimeout(function() {\n        return reject(\"First\");\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        return resolve(\"Second\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        return resolve(\"Second\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var clicks = [\n        false,\n        false\n    ];\n    document.addEventListener(\"click\", function() {\n        clicks.splice(0, 1, true);\n        clicksCheck();\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        clicks.splice(1, 1, true);\n        clicksCheck();\n    });\n    var clicksCheck = function() {\n        return clicks.every(Boolean) && resolve(\"Third\");\n    };\n});\nfirstPromise.then(promiseHelper).catch(function(first) {\n    return promiseHelper(first, true);\n});\nsecondPromise.then(promiseHelper);\nthirdPromise.then(promiseHelper);\n\n//# sourceMappingURL=index.449a8600.js.map\n","/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst promiseHelper = (namePromise, isError = false) => {\n  const messageDiv = document.createElement('div');\n\n  messageDiv.setAttribute('data-qa', 'notification');\n\n  if (isError) {\n    messageDiv.classList.add('error');\n    messageDiv.textContent = `${namePromise} promise was rejected`;\n  } else {\n    messageDiv.classList.add('success');\n    messageDiv.textContent = `${namePromise} promise was resolved`;\n  }\n\n  document.body.append(messageDiv);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => resolve('First'));\n  setTimeout(() => reject('First'), 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => resolve('Second'));\n  document.addEventListener('contextmenu', () => resolve('Second'));\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  const clicks = [false, false];\n\n  document.addEventListener('click', () => {\n    clicks.splice(0, 1, true);\n    clicksCheck();\n  });\n\n  document.addEventListener('contextmenu', () => {\n    clicks.splice(1, 1, true);\n    clicksCheck();\n  });\n\n  const clicksCheck = () => clicks.every(Boolean) && resolve('Third');\n});\n\nfirstPromise.then(promiseHelper).catch((first) => promiseHelper(first, true));\nsecondPromise.then(promiseHelper);\nthirdPromise.then(promiseHelper);\n"],"names":["promiseHelper","namePromise","isError","arguments","length","messageDiv","document","createElement","setAttribute","classList","add","textContent","concat","body","append","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","secondPromise","thirdPromise","clicks","splice","clicksCheck","every","Boolean","then","catch","first"],"version":3,"file":"index.449a8600.js.map"}